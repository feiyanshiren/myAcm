1078. Bigram 分词

给出第一个词 first 和第二个词 second，考虑在某些文本 text 中可能以 "first second third" 形式出现的情况，其中 second 紧随 first 出现，third 紧随 second 出现。

对于每种这样的情况，将第三个词 "third" 添加到答案中，并返回答案。

 

示例 1：

输入：text = "alice is a good girl she is a good student", first = "a", second = "good"
输出：["girl","student"]

示例 2：

输入：text = "we will we will rock you", first = "we", second = "will"
输出：["we","rock"]

 

提示：

    1 <= text.length <= 1000
    text 由一些用空格分隔的单词组成，每个单词都由小写英文字母组成
    1 <= first.length, second.length <= 10
    first 和 second 由小写英文字母组成


解：
转数组线性查找记录

```py
class Solution:
    def findOcurrences(self, text: str, first: str, second: str) -> List[str]:
        d = text.split()
        res = []
        for i in range(len(d) - 2):
            if d[i] == first:
                if d[i + 1] == second:
                    res.append(d[i + 2])
        return res
```
---


1078. Bigram 分词    --2

给出第一个词 first 和第二个词 second，考虑在某些文本 text 中可能以 "first second third" 形式出现的情况，其中 second 紧随 first 出现，third 紧随 second 出现。

对于每种这样的情况，将第三个词 "third" 添加到答案中，并返回答案。

 

示例 1：

输入：text = "alice is a good girl she is a good student", first = "a", second = "good"
输出：["girl","student"]

示例 2：

输入：text = "we will we will rock you", first = "we", second = "will"
输出：["we","rock"]

 

提示：

    1 <= text.length <= 1000
    text 由一些用空格分隔的单词组成，每个单词都由小写英文字母组成
    1 <= first.length, second.length <= 10
    first 和 second 由小写英文字母组成


解：
正则

```py
class Solution:
    def findOcurrences(self, text: str, first: str, second: str) -> List[str]:
        return re.findall(fr"(?<=\b{first} {second} )(\w+)", text)
```
---


1078. Bigram 分词    --3

给出第一个词 first 和第二个词 second，考虑在某些文本 text 中可能以 "first second third" 形式出现的情况，其中 second 紧随 first 出现，third 紧随 second 出现。

对于每种这样的情况，将第三个词 "third" 添加到答案中，并返回答案。

 

示例 1：

输入：text = "alice is a good girl she is a good student", first = "a", second = "good"
输出：["girl","student"]

示例 2：

输入：text = "we will we will rock you", first = "we", second = "will"
输出：["we","rock"]

 

提示：

    1 <= text.length <= 1000
    text 由一些用空格分隔的单词组成，每个单词都由小写英文字母组成
    1 <= first.length, second.length <= 10
    first 和 second 由小写英文字母组成


解：
go语言双百

```go
func findOcurrences(text string, first string, second string) []string {
    d := strings.Split(text, " ")
    // fmt.Println(d)
    var res []string
    for i := 0; i < len(d) - 2; i++{
        if d[i] == first && d[i + 1] == second{
            res = append(res, d[i + 2])
        }
    }
    return res
}
```
---
