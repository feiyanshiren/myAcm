面试题 01.04. 回文排列
给定一个字符串，编写一个函数判定其是否为某个回文串的排列之一。

回文串是指正反两个方向都一样的单词或短语。排列是指字母的重新排列。

回文串不一定是字典当中的单词。

 

示例1：

输入："tactcoa"
输出：true（排列有"tacocat"、"atcocta"，等等）

解，使用Counter，判断是否都有双数 87+

```py
import collections

class Solution:
    def canPermutePalindrome(self, s: str) -> bool:
        ss = dict(collections.Counter(s))
        print(ss)
        l = len(s)
        if l % 2 == 0:
            for v in ss.values():
                if v % 2 != 0:
                    return False
            return True
        else:
            k = 0
            for v in ss.values():
                if v % 2 != 0:
                    if k == 0:
                        k = 1
                    else:
                        return False
            return True
```
---


面试题 01.04. 回文排列    --2
给定一个字符串，编写一个函数判定其是否为某个回文串的排列之一。

回文串是指正反两个方向都一样的单词或短语。排列是指字母的重新排列。

回文串不一定是字典当中的单词。

 

示例1：

输入："tactcoa"
输出：true（排列有"tacocat"、"atcocta"，等等）

解，使用Counter，判断是否都有双数,精简版 96+

```py
import collections

class Solution:
    def canPermutePalindrome(self, s: str) -> bool:
        ss = collections.Counter(s)
        k = 0
        for v in ss.values():
            if v % 2 != 0:
                if k == 0:
                    k = 1
                else:
                    return False
        return True
```
---
