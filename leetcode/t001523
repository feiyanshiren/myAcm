1523. 在区间范围内统计奇数数目
给你两个非负整数 low 和 high 。请你返回 low 和 high 之间（包括二者）奇数的数目。

 

示例 1：

输入：low = 3, high = 7
输出：3
解释：3 到 7 之间奇数数字为 [3,5,7] 。
示例 2：

输入：low = 8, high = 10
输出：1
解释：8 到 10 之间奇数数字为 [9] 。
 

提示：

0 <= low <= high <= 10^9

解：
暴力 要超时
```py
class Solution:
    def countOdds(self, low: int, high: int) -> int:
        res = 0
        for i in range(low, high + 1):
            if i % 2 != 0:
                res += 1
        return res
```
---


1523. 在区间范围内统计奇数数目    --2
给你两个非负整数 low 和 high 。请你返回 low 和 high 之间（包括二者）奇数的数目。

 

示例 1：

输入：low = 3, high = 7
输出：3
解释：3 到 7 之间奇数数字为 [3,5,7] 。
示例 2：

输入：low = 8, high = 10
输出：1
解释：8 到 10 之间奇数数字为 [9] 。
 

提示：

0 <= low <= high <= 10^9

解：
分情况求范围除以2 95+
```py
class Solution:
    def countOdds(self, low: int, high: int) -> int:
        a = low % 2
        b = high % 2
        c = high - low
        if a != 0 and b == 0:
            return (c + 1) // 2
        elif a == 0 and b == 0:
            return c // 2
        elif a != 0 and b != 0:
            return (c + 2) // 2
        else:
            return (c + 1) // 2
```
---

1523. 在区间范围内统计奇数数目    --3
给你两个非负整数 low 和 high 。请你返回 low 和 high 之间（包括二者）奇数的数目。

 

示例 1：

输入：low = 3, high = 7
输出：3
解释：3 到 7 之间奇数数字为 [3,5,7] 。
示例 2：

输入：low = 8, high = 10
输出：1
解释：8 到 10 之间奇数数字为 [9] 。
 

提示：

0 <= low <= high <= 10^9

解：
一行
```py
class Solution:
    def countOdds(self, low: int, high: int) -> int:
        return (high + 1) // 2 - (low) // 2
```
---
