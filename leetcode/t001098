1089. 复写零

给你一个长度固定的整数数组 arr，请你将该数组中出现的每个零都复写一遍，并将其余的元素向右平移。

注意：请不要在超过该数组长度的位置写入元素。

要求：请对输入的数组 就地 进行上述修改，不要从函数返回任何东西。

 

示例 1：

输入：[1,0,2,3,0,4,5,0]
输出：null
解释：调用函数后，输入的数组将被修改为：[1,0,0,2,3,0,0,4]

示例 2：

输入：[1,2,3]
输出：null
解释：调用函数后，输入的数组将被修改为：[1,2,3]

 

提示：

    1 <= arr.length <= 10000
    0 <= arr[i] <= 9


解：
使用一个数组来临时，用添加的方法，注意退出条件。

```py
class Solution:
    def duplicateZeros(self, arr: List[int]) -> None:
        """
        Do not return anything, modify arr in-place instead.
        """
        a = arr[:]
        arr.clear()
        l = len(a)
        for i in range(l):
            if a[i] == 0:
                arr.append(0)
                if len(arr) == l:
                    break
                arr.append(0)
                if len(arr) == l:
                    break
            else:
                arr.append(a[i])
                if len(arr) == l:
                    break
```
---


1089. 复写零    --2

给你一个长度固定的整数数组 arr，请你将该数组中出现的每个零都复写一遍，并将其余的元素向右平移。

注意：请不要在超过该数组长度的位置写入元素。

要求：请对输入的数组 就地 进行上述修改，不要从函数返回任何东西。

 

示例 1：

输入：[1,0,2,3,0,4,5,0]
输出：null
解释：调用函数后，输入的数组将被修改为：[1,0,0,2,3,0,0,4]

示例 2：

输入：[1,2,3]
输出：null
解释：调用函数后，输入的数组将被修改为：[1,2,3]

 

提示：

    1 <= arr.length <= 10000
    0 <= arr[i] <= 9


解：
使用一个数组来临时，可以不用添加的方法，go语言版

```go
func duplicateZeros(arr []int)  {
    l := len(arr)
    a := make([]int, l)
    copy(a, arr)
    j := 0
    for i := 0; i < l; i++{
        if a[j] == 0{
            arr[i] = 0
            if i < l - 1{
                i++
                arr[i] = 0
            }
        }else{
            arr[i] = a[j]
        }
        j++
    }

}
```
---
