1832. 判断句子是否为全字母句

全字母句 指包含英语字母表中每个字母至少一次的句子。

给你一个仅由小写英文字母组成的字符串 sentence ，请你判断 sentence 是否为 全字母句 。

如果是，返回 true ；否则，返回 false 。

 

示例 1：

输入：sentence = "thequickbrownfoxjumpsoverthelazydog"
输出：true
解释：sentence 包含英语字母表中每个字母至少一次。

示例 2：

输入：sentence = "leetcode"
输出：false

解：
使用统计函数，本质上是理由map

```py
class Solution:
    def checkIfPangram(self, sentence: str) -> bool:
        s = dict(collections.Counter(sentence))
        if len(s) == 26:
            return True
        else:
            return False
```
---


1832. 判断句子是否为全字母句    --2

全字母句 指包含英语字母表中每个字母至少一次的句子。

给你一个仅由小写英文字母组成的字符串 sentence ，请你判断 sentence 是否为 全字母句 。

如果是，返回 true ；否则，返回 false 。

 

示例 1：

输入：sentence = "thequickbrownfoxjumpsoverthelazydog"
输出：true
解释：sentence 包含英语字母表中每个字母至少一次。

示例 2：

输入：sentence = "leetcode"
输出：false

解：
使用统计函数，使用数组比map高效一点，然后使用go语言。100+

```go
func checkIfPangram(sentence string) bool {
	var arr [26]int
	for _, v := range sentence {
		arr[v-'a'] += 1
	}
	for _, v := range arr {
		if v == 0 {
			return false
		}
	}
	return true
}
```
---
