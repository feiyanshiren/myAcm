# 836. 矩形重叠    --2
#
# 矩形以列表 [x1, y1, x2, y2] 的形式表示，其中 (x1, y1) 为左下角的坐标，(x2, y2) 是右上角的坐标。
#
# 如果相交的面积为正，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。
#
# 给出两个矩形，判断它们是否重叠并返回结果。
#
# 示例 1：
#
# 输入：rec1 = [0,0,2,2], rec2 = [1,1,3,3]
# 输出：true
#
# 示例 2：
#
# 输入：rec1 = [0,0,1,1], rec2 = [1,0,2,1]
# 输出：false
#
# 说明：
#
#     两个矩形 rec1 和 rec2 都以含有四个整数的列表的形式给出。
#     矩形中的所有坐标都处于 -10^9 和 10^9 之间。
#
#
# 解：
# 检查位置
#
# 想法
#
# 如果长方形之间没有重合，那么 rec1 必然高于、低于 rec2 或者在左右两侧。
#
# 算法
#
# 对于没有重合的情况，只可能是 LEFT OR RIGHT OR UP OR DOWN 其中 OR 是逻辑或，LEFT 是一个布尔变量表示 rec1 是否在 rec2 左侧。是否重合的答案就是上述结果的反。
#
# 条件“rec1 在 rec2 左侧”等价于 rec1[2] <= rec2[0]，就是 rec1 最右的 x 坐标在 rec2 最左的 x 坐标左边。其余同理。
#
# ```
class Solution(object):
    def isRectangleOverlap(self, rec1, rec2):
        return not (rec1[2] <= rec2[0] or  # left
                    rec1[3] <= rec2[1] or  # bottom
                    rec1[0] >= rec2[2] or  # right
                    rec1[1] >= rec2[3])    # to