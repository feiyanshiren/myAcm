1108. IP 地址无效化

给你一个有效的 IPv4 地址 address，返回这个 IP 地址的无效化版本。

所谓无效化 IP 地址，其实就是用 "[.]" 代替了每个 "."。

 

示例 1：

输入：address = "1.1.1.1"
输出："1[.]1[.]1[.]1"

示例 2：

输入：address = "255.100.50.0"
输出："255[.]100[.]50[.]0"

提示：

    给出的 address 是一个有效的 IPv4 地址

 解：
很简单的题了，直接替换

```py

class Solution:
    def defangIPaddr(self, address: str) -> str:
        return address.replace(".", "[.]")
```
---


1108. IP 地址无效化    --2

给你一个有效的 IPv4 地址 address，返回这个 IP 地址的无效化版本。

所谓无效化 IP 地址，其实就是用 "[.]" 代替了每个 "."。

 

示例 1：

输入：address = "1.1.1.1"
输出："1[.]1[.]1[.]1"

示例 2：

输入：address = "255.100.50.0"
输出："255[.]100[.]50[.]0"

提示：

    给出的 address 是一个有效的 IPv4 地址

 解：
很简单的题了，直接替换，go语言双百

```go

func defangIPaddr(address string) string {
    return strings.Replace(address, ".", "[.]", -1)
}
```
---
