908. 最小差值 I

给你一个整数数组 A，对于每个整数 A[i]，我们可以选择处于区间 [-K, K] 中的任意数 x ，将 x 与 A[i] 相加，结果存入 A[i] 。

在此过程之后，我们得到一些数组 B。

返回 B 的最大值和 B 的最小值之间可能存在的最小差值。



示例 1：

输入：A = [1], K = 0
输出：0
解释：B = [1]

示例 2：

输入：A = [0,10], K = 2
输出：6
解释：B = [2,8]

示例 3：

输入：A = [1,3,6], K = 3
输出：0
解释：B = [3,3,3] 或 B = [4,4,4]



提示：

    1 <= A.length <= 10000
    0 <= A[i] <= 10000
    0 <= K <= 10000

解：
题目中是B的最大值减去B的最小是，差值最小；也就是说先对A排序 取A的最大值max和最小值min;让max-min尽可能更小； 怎么做到最可能最小，就是让max减少k，让min增加+k ，这样减数减少，被减少增加，那么差值就最小了。但是有个条件就是max -k>min+k



```py

class Solution:
    def smallestRangeI(self, A: List[int], K: int) -> int:
        if max(A) - min(A) >= 2*K:
            return max(A)-min(A)-2*K
        else:
            return 0


```
---



908. 最小差值 I   --2

给你一个整数数组 A，对于每个整数 A[i]，我们可以选择处于区间 [-K, K] 中的任意数 x ，将 x 与 A[i] 相加，结果存入 A[i] 。

在此过程之后，我们得到一些数组 B。

返回 B 的最大值和 B 的最小值之间可能存在的最小差值。



示例 1：

输入：A = [1], K = 0
输出：0
解释：B = [1]

示例 2：

输入：A = [0,10], K = 2
输出：6
解释：B = [2,8]

示例 3：

输入：A = [1,3,6], K = 3
输出：0
解释：B = [3,3,3] 或 B = [4,4,4]



提示：

    1 <= A.length <= 10000
    0 <= A[i] <= 10000
    0 <= K <= 10000

解：
一行代码



```py
class Solution:
    def smallestRangeI(self, A: List[int], K: int) -> int:
        return max(0, max(A) - min(A) - 2*K)


```
---