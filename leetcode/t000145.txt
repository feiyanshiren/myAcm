145. 二叉树的后序遍历

给定一个二叉树，返回它的 后序 遍历。

示例:

输入: [1,null,2,3]  
   1
    \
     2
    /
   3 

输出: [3,2,1]

解：
递归
99+
```py
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def postorderTraversal(self, root: TreeNode) -> List[int]:
        if not root:
            return []            
        return self.postorderTraversal(root.left) + self.postorderTraversal(root.right) + [root.val]
```
---


145. 二叉树的后序遍历   --2

给定一个二叉树，返回它的 后序 遍历。

示例:

输入: [1,null,2,3]  
   1
    \
     2
    /
   3 

输出: [3,2,1]

解：
递归
100+
```go
/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func postorderTraversal(root *TreeNode) []int {
    res := make([]int, 0)
    f(root, &res)
    return res
}

func f(node *TreeNode, res *[]int){
    if node == nil{
        return
    }
    f(node.Left, res)
    f(node.Right, res)
    *res = append(*res, node.Val)
}
```
---