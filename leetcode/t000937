937. 重新排列日志文件

你有一个日志数组 logs。每条日志都是以空格分隔的字串。

对于每条日志，其第一个字为字母数字标识符。然后，要么：

    标识符后面的每个字将仅由小写字母组成，或；
    标识符后面的每个字将仅由数字组成。

我们将这两种日志分别称为字母日志和数字日志。保证每个日志在其标识符后面至少有一个字。

将日志重新排序，使得所有字母日志都排在数字日志之前。字母日志按内容字母顺序排序，忽略标识符；在内容相同时，按标识符排序。数字日志应该按原来的顺序排列。

返回日志的最终顺序。



示例 ：

输入：["a1 9 2 3 1","g1 act car","zo4 4 7","ab1 off key dog","a8 act zoo"]
输出：["g1 act car","a8 act zoo","ab1 off key dog","a1 9 2 3 1","zo4 4 7"]



提示：

    0 <= logs.length <= 100
    3 <= logs[i].length <= 100
    logs[i] 保证有一个标识符，并且标识符后面有一个字。



解：
先分数字和字母的，然后字母的按照 内容先排序在按照开头排，注意使用split， 的时候可能对后面的排序补全。

```py
class Solution:
    def reorderLogFiles(self, logs: List[str]) -> List[str]:
        nums = []
        alphas = []
        for log in logs:
            log_split = log.split()
            if log_split[1].isdigit():
                nums.append(log)
            else:
                alphas.append(log)
        # print("nums=%s" % nums)
        # print("alphas=%s" % alphas)
        alphas = sorted(alphas, key=lambda x: (x[x.find(" "):], x[:x.find(" ")]))
        return alphas + nums
```
---

937. 重新排列日志文件    --2

你有一个日志数组 logs。每条日志都是以空格分隔的字串。

对于每条日志，其第一个字为字母数字标识符。然后，要么：

    标识符后面的每个字将仅由小写字母组成，或；
    标识符后面的每个字将仅由数字组成。

我们将这两种日志分别称为字母日志和数字日志。保证每个日志在其标识符后面至少有一个字。

将日志重新排序，使得所有字母日志都排在数字日志之前。字母日志按内容字母顺序排序，忽略标识符；在内容相同时，按标识符排序。数字日志应该按原来的顺序排列。

返回日志的最终顺序。



示例 ：

输入：["a1 9 2 3 1","g1 act car","zo4 4 7","ab1 off key dog","a8 act zoo"]
输出：["g1 act car","a8 act zoo","ab1 off key dog","a1 9 2 3 1","zo4 4 7"]



提示：

    0 <= logs.length <= 100
    3 <= logs[i].length <= 100
    logs[i] 保证有一个标识符，并且标识符后面有一个字。



解：
方法：自定义排序

思路和算法

我们按照指定的自定义顺序进行排序，而不是按默认顺序排序。

排序规则如下：

    字母日志先于数字日志；
    字母日志按字母数字顺序排列，先按内容排序，再按标识符排序；
    数字日志的顺序保持不变。

这些想法很容易转化为代码。
split 可以带参数

```py
class Solution(object):
    def reorderLogFiles(self, logs):
        def f(log):
            id_, rest = log.split(" ", 1)
            return (0, rest, id_) if rest[0].isalpha() else (1,)

        return sorted(logs, key = f)


```
---