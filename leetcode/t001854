1854. 人口最多的年份

给你一个二维整数数组 logs ，其中每个 logs[i] = [birthi, deathi] 表示第 i 个人的出生和死亡年份。

年份 x 的 人口 定义为这一年期间活着的人的数目。第 i 个人被计入年份 x 的人口需要满足：x 在闭区间 [birthi, deathi - 1] 内。注意，人不应当计入他们死亡当年的人口中。

返回 人口最多 且 最早 的年份。

 

示例 1：

输入：logs = [[1993,1999],[2000,2010]]
输出：1993
解释：人口最多为 1 ，而 1993 是人口为 1 的最早年份。

示例 2：

输入：logs = [[1950,1961],[1960,1971],[1970,1981]]
输出：1960
解释： 
人口最多为 2 ，分别出现在 1960 和 1970 。
其中最早年份是 1960 。

 

提示：

    1 <= logs.length <= 100
    1950 <= birthi < deathi <= 2050

解：
使用一个字典，先求最大再求最小
```py
class Solution:
    def maximumPopulation(self, logs: List[List[int]]) -> int:
        res = {}
        res_max = 0
        for i in range(1950, 2050):
            for j in logs:
                if j[0] <= i < j[1]:
                    res[i] = res.get(i, 0) + 1
            res_max = max(res_max, res.get(i, 0))
        res_min = 2050
        for k, v in res.items():
            if v == res_max:
                res_min = min(res_min, k)
        return res_min
```
---


1854. 人口最多的年份    --2

给你一个二维整数数组 logs ，其中每个 logs[i] = [birthi, deathi] 表示第 i 个人的出生和死亡年份。

年份 x 的 人口 定义为这一年期间活着的人的数目。第 i 个人被计入年份 x 的人口需要满足：x 在闭区间 [birthi, deathi - 1] 内。注意，人不应当计入他们死亡当年的人口中。

返回 人口最多 且 最早 的年份。

 

示例 1：

输入：logs = [[1993,1999],[2000,2010]]
输出：1993
解释：人口最多为 1 ，而 1993 是人口为 1 的最早年份。

示例 2：

输入：logs = [[1950,1961],[1960,1971],[1970,1981]]
输出：1960
解释： 
人口最多为 2 ，分别出现在 1960 和 1970 。
其中最早年份是 1960 。

 

提示：

    1 <= logs.length <= 100
    1950 <= birthi < deathi <= 2050

解：
不使用字典，循环中更新最大最小
```py
class Solution:
    def maximumPopulation(self, logs: List[List[int]]) -> int:
        res = 2050
        res_max = 0
        for i in range(1950, 2050):
            a = 0
            for j in logs:
                if j[0] <= i < j[1]:
                    a += 1
            if a > res_max:
                res_max = a
                res = i
            elif a == res_max:
                if i < res:
                    res = i
        return res
```
---


1854. 人口最多的年份    --3

给你一个二维整数数组 logs ，其中每个 logs[i] = [birthi, deathi] 表示第 i 个人的出生和死亡年份。

年份 x 的 人口 定义为这一年期间活着的人的数目。第 i 个人被计入年份 x 的人口需要满足：x 在闭区间 [birthi, deathi - 1] 内。注意，人不应当计入他们死亡当年的人口中。

返回 人口最多 且 最早 的年份。

 

示例 1：

输入：logs = [[1993,1999],[2000,2010]]
输出：1993
解释：人口最多为 1 ，而 1993 是人口为 1 的最早年份。

示例 2：

输入：logs = [[1950,1961],[1960,1971],[1970,1981]]
输出：1960
解释： 
人口最多为 2 ，分别出现在 1960 和 1970 。
其中最早年份是 1960 。

 

提示：

    1 <= logs.length <= 100
    1950 <= birthi < deathi <= 2050

解：
不使用字典，循环中更新最大最小 go 语言 100+
```go
func maximumPopulation(logs [][]int) int {
    res := 2050
    res_max := 0
    for i := 1950; i < 2050; i++{
        a := 0
        for _, j := range logs{
            if j[0] <= i && j[1] > i{
                a += 1
            }
            if a > res_max{
                res_max = a
                res = i
            }else if a == res_max{
                if i < res{
                    res = i
                }
            }
        }
    }
    return res
}
```
---