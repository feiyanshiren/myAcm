面试题 05.03. 翻转数位
给定一个32位整数 num，你可以将一个数位从0变为1。请编写一个程序，找出你能够获得的最长的一串1的长度。

示例 1：

输入: num = 1775(110111011112)
输出: 8
示例 2：

输入: num = 7(01112)
输出: 4

解：
分组0，然后查询连接大小

```py
class Solution:
    def reverseBits(self, num: int) -> int:
        s_num = bin(num)[2:]
        list_num = s_num.split("0")
        max1 = len(list_num[0])
        for i in range(1, len(list_num)):
            len_1 = len(list_num[i - 1]) + len(list_num[i])
            if len_1 > max1:
                max1 = len_1
        return max1 + 1
```

---

面试题 05.03. 翻转数位    --2
给定一个32位整数 num，你可以将一个数位从0变为1。请编写一个程序，找出你能够获得的最长的一串1的长度。

示例 1：

输入: num = 1775(110111011112)
输出: 8
示例 2：

输入: num = 7(01112)
输出: 4

解：
分组0，然后查询连接大小,两行

```py
class Solution:
    def reverseBits(self, num: int) -> int:
         s = [*map(len, bin(num)[2: ].split('0'))]
        return max((s[i] + c for i, c in enumerate(s[1: ])), default=s[0] - 1) + 1
```

---
