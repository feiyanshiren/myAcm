1957. 删除字符使字符串变好

一个字符串如果没有 三个连续 相同字符，那么它就是一个 好字符串 。

给你一个字符串 s ，请你从 s 删除 最少 的字符，使它变成一个 好字符串 。

请你返回删除后的字符串。题目数据保证答案总是 唯一的 。

 

示例 1：

输入：s = "leeetcode"
输出："leetcode"
解释：
从第一组 'e' 里面删除一个 'e' ，得到 "leetcode" 。
没有连续三个相同字符，所以返回 "leetcode" 。

示例 2：

输入：s = "aaabaaaa"
输出："aabaa"
解释：
从第一组 'a' 里面删除一个 'a' ，得到 "aabaaaa" 。
从第二组 'a' 里面删除两个 'a' ，得到 "aabaa" 。
没有连续三个相同字符，所以返回 "aabaa" 。

示例 3：

输入：s = "aab"
输出："aab"
解释：没有连续三个相同字符，所以返回 "aab" 。

 

提示：

    1 <= s.length <= 105
    s 只包含小写英文字母。


解：
循环纪录次数
```py
class Solution:
    def makeFancyString(self, s: str) -> str:
        old = ""
        count = 0
        i = 0
        res = list(s)
        while i < len(s):
            if s[i] == old:
                count += 1
            else:
                old = s[i]
                count = 1
            if count >= 3:
                res[i] = ""
                count -= 1
            i += 1
        return "".join(res)
```
---


1957. 删除字符使字符串变好    --2

一个字符串如果没有 三个连续 相同字符，那么它就是一个 好字符串 。

给你一个字符串 s ，请你从 s 删除 最少 的字符，使它变成一个 好字符串 。

请你返回删除后的字符串。题目数据保证答案总是 唯一的 。

 

示例 1：

输入：s = "leeetcode"
输出："leetcode"
解释：
从第一组 'e' 里面删除一个 'e' ，得到 "leetcode" 。
没有连续三个相同字符，所以返回 "leetcode" 。

示例 2：

输入：s = "aaabaaaa"
输出："aabaa"
解释：
从第一组 'a' 里面删除一个 'a' ，得到 "aabaaaa" 。
从第二组 'a' 里面删除两个 'a' ，得到 "aabaa" 。
没有连续三个相同字符，所以返回 "aabaa" 。

示例 3：

输入：s = "aab"
输出："aab"
解释：没有连续三个相同字符，所以返回 "aab" 。

 

提示：

    1 <= s.length <= 105
    s 只包含小写英文字母。


解：
循环 用添加的方式
```py
class Solution:
    def makeFancyString(self, s: str) -> str:
        res = []
        for v in s:
            if len(res) >= 2 and res[-1] == res[-2] == v:
                continue
            res.append(v)
        return "".join(res)
```
---


1957. 删除字符使字符串变好    --3

一个字符串如果没有 三个连续 相同字符，那么它就是一个 好字符串 。

给你一个字符串 s ，请你从 s 删除 最少 的字符，使它变成一个 好字符串 。

请你返回删除后的字符串。题目数据保证答案总是 唯一的 。

 

示例 1：

输入：s = "leeetcode"
输出："leetcode"
解释：
从第一组 'e' 里面删除一个 'e' ，得到 "leetcode" 。
没有连续三个相同字符，所以返回 "leetcode" 。

示例 2：

输入：s = "aaabaaaa"
输出："aabaa"
解释：
从第一组 'a' 里面删除一个 'a' ，得到 "aabaaaa" 。
从第二组 'a' 里面删除两个 'a' ，得到 "aabaa" 。
没有连续三个相同字符，所以返回 "aabaa" 。

示例 3：

输入：s = "aab"
输出："aab"
解释：没有连续三个相同字符，所以返回 "aab" 。

 

提示：

    1 <= s.length <= 105
    s 只包含小写英文字母。


解：
循环 用添加的方式 go
```go
func makeFancyString(s string) string {
    res := make([]rune, 0)
    for _, v := range s{
        ll := len(res)
        if ll >= 2 && res[ll - 1] == v && res[ll - 2] == v{
            continue
        }
        res = append(res, v)
    }
    return string(res)
}
```
---


1957. 删除字符使字符串变好    --4

一个字符串如果没有 三个连续 相同字符，那么它就是一个 好字符串 。

给你一个字符串 s ，请你从 s 删除 最少 的字符，使它变成一个 好字符串 。

请你返回删除后的字符串。题目数据保证答案总是 唯一的 。

 

示例 1：

输入：s = "leeetcode"
输出："leetcode"
解释：
从第一组 'e' 里面删除一个 'e' ，得到 "leetcode" 。
没有连续三个相同字符，所以返回 "leetcode" 。

示例 2：

输入：s = "aaabaaaa"
输出："aabaa"
解释：
从第一组 'a' 里面删除一个 'a' ，得到 "aabaaaa" 。
从第二组 'a' 里面删除两个 'a' ，得到 "aabaa" 。
没有连续三个相同字符，所以返回 "aabaa" 。

示例 3：

输入：s = "aab"
输出："aab"
解释：没有连续三个相同字符，所以返回 "aab" 。

 

提示：

    1 <= s.length <= 105
    s 只包含小写英文字母。


解：
循环 用添加的方式 ruby
```rb
# @param {String} s
# @return {String}
def make_fancy_string(s)
    res = Array.new
    s.each_char{|v|
        if res.length >= 2 and res[-1] == v and res[-2] == v then
            next
        end
        res.push(v)
    }
    return res.join("")
end
```
---