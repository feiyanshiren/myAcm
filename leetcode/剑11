剑指 Offer 11. 旋转数组的最小数字
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。  

示例 1：

输入：[3,4,5,1,2]
输出：1
示例 2：

输入：[2,2,2,0,1]
输出：0
注意：本题与主站 154 题相同

解：
求最小值，这道题的题意感觉不明确？

```py
class Solution:
    def minArray(self, numbers: List[int]) -> int:
        return min(numbers)
```

---


剑指 Offer 11. 旋转数组的最小数字    --2
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 [3,4,5,1,2] 为 [1,2,3,4,5] 的一个旋转，该数组的最小值为1。  

示例 1：

输入：[3,4,5,1,2]
输出：1
示例 2：

输入：[2,2,2,0,1]
输出：0
注意：本题与主站 154 题相同

解：
原数组是递增的，经过旋转以后会把一部分小数据转移到后面去，所以只要从第一位往后找，只要遇到一个不是递增的元素那就说明这个元素及其之后的元素都是旋转过去的，返回这个元素就行了（因为这个小集合肯定也是递增的）

```py
class Solution:
    def minArray(self, numbers: List[int]) -> int:
        f = numbers[0]
        l = len(numbers)
        for i in range(1, l):
            if numbers[i] < f:
                return numbers[i]
			else:
                f = numbers[i]
        return numbers[0]
```

---
